name: Release Workflow

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - closed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Set fetch depth to 0 to fetch all tags

      # Only release from the main branch
      - name: Exit if not on main branch
        if: github.ref != 'refs/heads/main'
        run: exit -1

      # Only release when the pull request is merged
      - name: Exit if pull request not merged
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == false
        run: exit -1

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Configure NPM authentication
        run: npm set //npm.pkg.github.com/:_authToken ${{ secrets.GITHUB_TOKEN }}    

      - name: Install dependencies
        run: npm ci     

      # Retrieve the latest Git tag
      - name: Retrieve latest Git tag
        id: latest_tag
        run: echo "::set-output name=tag::$(git describe --abbrev=0)"

      - name: Create release archive
        run: zip -r lrc-annotate.zip transforms/** styles/** README.md

      - name: Generate Changelog
        run: |
          export VERSION=$(git tag --sort=-committerdate | head -1)
          export PREVIOUS_VERSION=$(git tag --sort=-committerdate | head -2 | awk '{split($0, tags, "\n")} END {print tags[1]}')
          export CHANGES=$(git log --pretty="- %s" $VERSION...$PREVIOUS_VERSION)
          printf "# 🎁 Release notes (\`$VERSION\`)\n\n## Changes\n\n$CHANGES\n\n## Metadata\n\n\`\`\`csv\nThis version -------- $VERSION\nPrevious version ---- $PREVIOUS_VERSION\nTotal commits ------- $(echo "$CHANGES" | wc -l)\n\`\`\`\n" > ${{ github.workspace }}-CHANGELOG.md

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.latest_tag.outputs.tag }}
          body_path: ${{ github.workspace }}-CHANGELOG.md
          files: lrc-annotate.zip

      - name: Publish to NPM
        run: npm publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
