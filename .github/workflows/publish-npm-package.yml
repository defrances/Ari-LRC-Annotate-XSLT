name: Deploy new version to NPM

on:  
  push:
    tags:
      - '*'
      - 'v*.*.*'
      - 'v*.*'

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Set  fetch depth to 0 to fetch all tags
      # Only release when the pull request is merged
      - name: Exit  if pull request not merged
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == false
        run: exit -1

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - run: npm set //npm.pkg.github.com/:_authToken ${{ secrets.GITHUB_TOKEN }}
      - run: npm install -g npm
      - run: npm ci

      - name: Configure NPM authentication
        run: npm set //npm.pkg.github.com/:_authToken ${{ secrets.GITHUB_TOKEN }}    

      - name: Install dependencies
        run: npm ci     

      - name: Create release archive
        run: zip -r lrc-annotate.zip transforms/** styles/** README.md

      - name: Get package version
        id: get-package-version
        run: echo "::set-output name=version::$(node -p "require('./package.json').version")"

      - name: Generate Changelog
        run: |
          VERSION=v${{ steps.get-package-version.outputs.version }}
          PREVIOUS_VERSION=$(git describe --abbrev=0 --tags HEAD^ --always)
          CHANGES=$(git log --pretty="- %s" $PREVIOUS_VERSION..HEAD)
          printf "# 🎁 Release notes (\`$VERSION\`)\n\n## Changes\n\n$CHANGES\n\n## Metadata\n\n\`\`\`csv\nThis version -------- $VERSION\nPrevious version ---- $PREVIOUS_VERSION\nTotal commits ------- $(echo "$CHANGES" | wc -l)\n\`\`\`\n" > ${{ github.workspace }}-CHANGELOG.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: lrc-annotate.zip
          tag_name: v${{ steps.get-package-version.outputs.version }}
          name: Release v${{ steps.get-package-version.outputs.version }}
          body_path: ${{ github.workspace }}-CHANGELOG.md
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to NPM
        run: npm publish
        env:
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}