name: Create release pull request

on:
  push:
    branches:
      - main
permissions:
  contents: write
  pull-requests: write

jobs:
  run-tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v1
      with:
        java-version: '11' # The JDK version to make available on the path.
        java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
        architecture: x64 # (x64 or x86) - defaults to x64
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Run XSpec tests with Maven
      run: mvn -B test --file pom.xml

    - name: Archive test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: target/xspec-reports
  release-please:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          package-name: release-please-action
          changelog-types: '[
            {"type":"feat","section":"Features","hidden":false},
            {"type":"fix","section":"Bug Fixes","hidden":false},
            {"type":"chore","section":"Miscellaneous","hidden":false}
            ]'
    outputs:
     release_created: ${{ steps.release.outputs.release_created }}

  build-release:
    if: ${{ needs.release-please.outputs.release_created }}
    needs: release-please
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        #if: ${{ steps.release.outputs.release_created }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Set   fetch depth to 0 to fetch all tags
      
      - name: Setup Node.js
        #if: ${{ steps.release.outputs.release_created }}
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Install dependencies
        #if: ${{ steps.release.outputs.release_created }}        
        run: |
          npm set //npm.pkg.github.com/:_authToken ${{ secrets.GITHUB_TOKEN }}
          npm install -g npm
          npm ci

      - name: Configure NPM authentication
        #if: ${{ steps.release.outputs.release_created }}
        run: npm set //npm.pkg.github.com/:_authToken ${{ secrets.GITHUB_TOKEN }}    

      - name: Install dependencies
        #if: ${{ steps.release.outputs.release_created }}
        run: npm ci     

      - name: Create release archive
        #if: ${{ steps.release.outputs.release_created }}
        run: zip -r lrc-annotate.zip transforms/** styles/** README.md

      - name: Get package version
        #if: ${{ steps.release.outputs.release_created }}
        id: get-package-version
        run: echo "::set-output name=version::$(node -p "require('./package.json').version")"

      - name: Generate Changelog
        #if: ${{ steps.release.outputs.release_created }}
        run: |
          VERSION=v${{ steps.get-package-version.outputs.version }}
          PREVIOUS_VERSION=$(git describe --abbrev=0 --tags HEAD^ --always)
          CHANGES=$(git log --pretty="- %s" $PREVIOUS_VERSION..HEAD)
          printf "# 🎁 Release notes (\`$VERSION\`)\n\n## Changes\n\n$CHANGES\n\n## Metadata\n\n\`\`\`csv\nThis version -------- $VERSION\nPrevious version ---- $PREVIOUS_VERSION\nTotal commits ------- $(echo "$CHANGES" | wc -l)\n\`\`\`\n" > ${{ github.workspace }}-CHANGELOG.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: lrc-annotate.zip
          tag_name: v${{ steps.get-package-version.outputs.version }}
          name: Release v${{ steps.get-package-version.outputs.version }}
          body_path: ${{ github.workspace }}-CHANGELOG.md
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to NPM
        #run: npm publish
        run: echo "npm publish"
        env:
          NPM_TOKEN: ${{ secrets.PAT }}
